Version 2.4.2

    - Minor improvments to Raft transaction handling to avoid retries
    - Added Session.RetryableAction and support for automatic retries
    - Added Session.HasTranasactionOptions and support for tx options

Version 2.4.1 Released October 13, 2016

    - Fixed incorrect exception type thrown on an unsafe Raft config change
    - Miscellaneous other minor fixes and improvements to Raft
    - Perform an availability check at startup in FallbackKVDatabase
    - Added @OnVersionChange.alwaysUseEnumValue()

Version 2.4.0 Released October 4, 2016

    - Fixed corner case bug in Raft when transactions span terms
    - Rebase transactions in MVCC-based key/value stores (including Raft)

Version 2.3.2 Released September 27, 2016

    - Performance improvements in MVCC-based key/value stores

Version 2.3.1 Released September 21, 2016

    - Fixed bug with @OnChange methods having a non-generic change parameter
    - Optimize the registration of listeners in JTransaction constructor

Version 2.3.0 Released September 15, 2016

    - Fixed bug where XMLObjectSerializer.load() failed on forward references
    - Improved speed of Transaction.copy() when notifications are disabled
    - Cache simple field values for better efficiency in repeated reads
    - Fixed race condition bug in AtomicArrayKVStore.snapshot()
    - Fixed bug in SQL key/value stores ordering getAtMost() queries
    - Fixed performance issue with Raft and key watches
    - Rewrote KeyRanges to address poor performance

Version 2.2.1 Released September 7, 2016

    - Fixed bug where beforeCommit() callbacks could not access transaction
    - Fixed race conditions in some toString() methods of Raft classes
    - Fixed Raft bug where pings to an unconfigured node failed an assertion
    - Treat a single out-of-date follower as unavailable in Raft fallback
    - Added subclass method JSimpleDBTransactionManager.createTransaction()
    - Added subclass method FallbackKVDatabase.isMigrationAllowed()
    - Added option for suppressing notifications when copying objects

Version 2.2.0 Released August 30, 2016

    - Added detection of assignment of references to deleted objects:
      - Added JField.allowDeleted() and JField.allowDeletedSnapshot()
      - NOTE: JField.allowDeleted() is enabled by default; for old behavior:
        - Set autogenAllowDeleted() = false on all @JSimpleClass's
        - Set allowDeleted() = false on all reference field @JField's
    - Allow Raft fallback MergeStrategy to perform the commit()'s itself
    - Corrected the behavior of JTransaction.getAll(UntypedJObject.class)
    - Added @OnChange support for explicit wildcards, e.g. "foo.bar.*"
    - Added CLI commands set-history-file, show-imports, show-variables
    - Added CLI function session()
    - Fixed MVCC resource leak bug added in release 2.1.6
    - Added `--history-file' CLI command line flag

Version 2.1.7 Released August 25, 2016

    - Notify key watches on a separate thread to avoid reentrancy issues
    - Changed JSimpleDBTransactionManager.validateBeforeCommit default to false
    - Fixed NullPointerException in FallbackTarget.getLastActiveTime()

Version 2.1.6 Released August 24, 2016

    - Updated to rocksdbjni version 4.9.0
    - Fixed Raft fallback bug: rollback inner tx on migration retry exception
    - Fixed Raft bug where leader removed from cluster would not immediately step down
    - Enhanced several classes to implement Serializable
    - Improved performance of read-only MVCC transactions
    - Fixed bug parsing lambda bodies

Version 2.1.5 Released August 7, 2016

    - Fixed bug where unique constraints were sometimes applied too widely
    - Fixed bug where annotations were not inherited if method overridden
    - Allow direct introspection of private fields via CLI console
    - Fixed incompatible type error from certain index queries
    - Added new core API utility class ObjDumper
    - Added isSnapshot() method to JTransaction and Transaction

Version 2.1.4 Released July 17, 2016

    - Fixed expression parsing bug with varargs methods given zero parameters
    - Fixed bug in previous Raft follower probe bug fix when only one node
    - Fixed possible deadlock in Raft fallback key watch listener notification

Version 2.1.3 Released July 12, 2016

    - Fixes for Windows:
      - Don't try to sync directories on Windows (issue #7)
      - Avoid use of AtomicUpdateFileOutputStream on Windows (issue #8)
      - Make the CLI console work (mostly) when running under Cygwin
    - Fixed bug in the Raft follower algorithm when probing is enabled
    - Added new CLI command `raft-fallback-force-standalone'

Version 2.1.2 Released July 8, 2016

    - Fixed NPE in RaftKVDatabase when null transaction options given
    - Fixed bug in NavigableSets union/intersection with empty sets
    - Added new method FallbackKVDatabase.setInitialTargetIndex()
    - Added new method AbstractFunction.parseNextParameter()
    - Fixed bug with `import' CLI command when used without wildcard
    - Handle key watches across target changes in Raft FallbackKVDatabase
    - Added `--file' and `--batch' CLI command line flags
    - Added capacity and lifetime limits to key watch tracker

Version 2.1.1 Released June 30, 2016

    - Fixed bug in MutableView leading to excessive MVCC conflicts
    - More reliable detection of retry exceptions in CockroachDB

Version 2.1.0 Released June 25, 2016

    - Discover key/value implementations by scanning the classpath
    - Discover parse function implementations from classpath
    - Discover CLI command implementations from classpath
    - Handle fields declared in multiple incomparable supertypes
    - Pass @Transaction.isolation() property through to SQL k/v stores
    - Fixed bug in JSimpleDBTransactionManager when using Propagation.SUPPORTS
    - Fixed parsing bug handling method references like `Object::hashCode'
    - Incompatible API changes:
      - Deprecated JTransaction.getJObject() methods have been removed
      - @Command and @Function annotations converted to interfaces
      - registerStandardFunctions() replaced by loadFunctionsFromClasspath()
      - registerStandardCommands() replaced by loadCommandsFromClasspath()

Version 2.0.1 Released May 28, 2016

    - Split out new modules kv-mysql and kv-sqlite from kv-sql
    - Fix bugs in the Maven plugin

Version 2.0.0 Released May 10, 2016

    - Converted build to Maven with more modular artifacts
    - Added KV wrapper for CockroachDB
    - Added parsing support for Java 8 expression syntax
    - Added key/value database wrapper for SQLite
    - Added XMLObjectSerializer.setFieldTruncationLength()
    - Added @JSimpleClass.autogenNonAbstract() and @JTransient
    - Added NavigableSetPager.setFilter()
    - Don't require JSR 303 validation classes unless used (issue #5)
    - Improvements to expression parser tab-completion
    - Fixed parser bug: handle class names like `int.class'
    - Fixed parser bug handling multiple assignment
    - Added parsing workaround for Tomcat bug #59282
    - Auto-create KV table in MySQLKVDatabase
    - Removed deprecated annotation @Validate

Version 1.3.5 Released February 17, 2016

    - Renamed @Validate -> @OnValidate and deprecated @Validate
    - Use base 64 for some primitive array string representations
    - Refactored JObjectContainer and Vaadin view application classes
    - Fixed bug parsing shift operators with large shifts
    - Fixed bug parsing binary, octal, and hex integer literals
    - Fixed bug with indexes on integral primitive array types
    - Allow @OnChange methods that take zero parameters
    - Added support for "classes" and <oldschemas> to the ant task
    - Added Base64ArrayType.toString(T, boolean)
    - Added NavigableSetPager utility class

Version 1.3.4 Released November 19, 2015

    - Eliminated the CLI test transaction on startup
    - Require all rollback() methods to not throw StaleTransactionException
    - Fixed possibly corrupting race condition in SimpleKVDatabase
    - Improved and better documented Raft tx consistency levels
    - Added support for Raft consistency levels in Spring TX manager
    - Fixed timestamp roll-over bug after 24 days of isolation in Raft
    - Allow mutations within read-only transactions
    - Bug fixes and improvements relating to Raft fallback support

Version 1.3.3 Released October 29, 2015

    - Fixed a couple of expression parser bugs
    - Fixed bugs in JObjectHttpMessageConverter
    - Improved CLI behavior when errors occur

Version 1.3.2 Released October 3, 2015

    - Added FallbackKVDatabase in raft pacakge
    - Added Spring JObjectHttpMessageConverter and friends
    - Added "hot copy" backup operation to AtomicArrayKVStore
    - Added `set-session-mode' CLI command
    - Added `-n' flag to kvget, `-a' flag to help
    - Added ability to configure custom ValidatorFactory

Version 1.3.1 Released August 24, 2015

    - Added read optimized, array-based key/value database
    - Fixed performance bug with index info cache

Version 1.3.0 Released August 14, 2015

    - Give each transaction its own pool of JObjects
    - Add optimizations to improve performance of field access

Version 1.2.2 Released July 16, 2015

    - Detect leftover abstract methods during schema generation
    - Fix bug where protected setter methods were not auto-detected
    - Implement fix for Raft config change corner case

Version 1.2.1 Released July 9, 2015

    - Added KVTransaction.mutableSnapshot() and KVStore-based
      snapshot transactions in JSimpleDB and core layers
    - Changed JObjectContainer to use mutableSnapshot()
    - Added RocksDBKVDatabase based on RocksDB JNI adapter
    - Added support for KVDatabase key watches
    - Improved performance of List field iterators
    - Fixed bugs and O(n^2) behavior in MutableView

Version 1.2.0 Released June 9, 2015

    - Added RaftKVDatabase based on Raft consensus algorithm
    - Added LevelDBKVDatabase based on LevelDB Java port
    - Added AtomicKVStore, MutableView, mvcc sub-package
    - Added various KVStore utility classes
    - Added key/value store session mode
    - Move project to GitHub

Version 1.1.838 Released March 7, 2015

    - Fixed bug in copyTo() not following reference path(s)
    - Allow revalidate() to be invoked during validation
    - Increase to four the max number of composite index fields
    - Move ObjIdSet to util package; add ObjIdMap and ObjIdBiMultiMap
    - Compress schema information before storing
    - Add schema difference calculator and CLI command
    - Improvements to CLI and GUI command line utilities
    - Added schema differences calculator plus CLI command
    - Added support for embedded CLI telnet consoles

Version 1.1.748 Released January 28, 2015

    - Added Vaadin GUI auto-generator
    - Added support for XML object import/export
    - Added support for composite indexes
    - Added uniqueness constraint validation
    - Added index for object schema versions
    - Added ant task to generate/verify schema
    - Eliminated the need for storage ID's
    - CLI rewrite with many improvements
    - Fixed several type safety corner cases
    - Build a distribution ZIP file with demo
    - Many bug fixes and improvements

Version 1.0.161 Released May 6, 2014

    - Added command line interface
    - Added snapshot capability
    - Added additional built-in field types
    - Added out-of-band change detection to XMLKVDatabase
    - Allow specifying multiple (or zero) paths in @OnChange
    - Bug fixes and improvements

Version 1.0.86 Released April 18, 2014

    - Initial release

