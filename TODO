
SHORT TERM
==========

- CLI:
    - New CLI flags:
        - `--console-port': accept console telnet connections on port
        - `--background': disable console on stdin/stdout, daemonize

- LevelDB & RocksDB: ensure removeRange() doesn't sync() on each k/v pair

- New RocksDB transaction support

- Does JTransaction.getAll(UntypedJObject.class) work? queryIndex() ?

- KVDatabase change notification/listener support
    - Forward up the stack for Raft @OnChange notifications

- New KVDatabase implementations
    - CockroachDB
        - Definitely; needs Java API
    - Amazon DynamoDB ?
    - Google Cloud Datastore ?
        - https://cloud.google.com/datastore/docs/concepts/overview
    - LMDB
        - https://github.com/deephacks/lmdbjni
    - Sphia
        - http://sphia.org/

- key/value layer transaction improvements
    - Add Spring transaction manager
    - Add setReadOnly()
        - Invoke from Transaction.setReadOnly()
    - Add setRollbackOnly()
        - Invoke from EvalCommand.getAction()
        - Invoke from Transaction.setRollbackOnly()

- Vaadin GUI editor generator
    - Implement editors for collection fields
    - Add range support - if query result is Navigable{Set,Map}
        - Min field
        - Max field
        - "Chunk Size" pulldown
        - "Next Chunk" button
    - Add arbitrary query support
        - Try to build JObjectContainer+table first
        - If that fails, build ObjectContainer+table instead
    - Make more modular/pluggable

- Should you be able to create snapshot tx's from snapshot tx's ?

LONG TERM
=========

- Add a network accessible API for KVDatabase
    - New "over the network" KVDatabase client
        - Includes server-side classes as well for embeddability
    - New CLI flag:
        - `--client-port': accept client TCP connections

- Add expression predicates to reference paths, e.g.:
    "friend[this.name.length() > 3].name"

- Key/Value database consistency checker
    - Checks a JDB key-value store for consistency
        - Correctly stored meta-data
        - All field values are properly encoded
        - Object vs. index entry consistency
        - No extraneous key-value pairs exist
    - Uses another, empty database to store its state
        - State database is a JSimpleDB database of course :)
        - Allows to run in multiple "chunked" transactions
    - Generates inconsistency report
    - Can auto-repair if necessary

- New expression parsing functions
    - Aggregate functions
        - min(), max(), avg(), sum(), etc.
        - See http://dev.mysql.com/doc/refman/5.5/en/group-by-functions.html

- CLI
    - New console "expr" input mode
        - Command "expr -i" enters this mode
        - Identifer "exit" exits this mode
        - All input is evaluated; if result != Value.NO_VALUE, assigned to $N (like gdb)
            - Unless expression is of the form "$foo = ..."
        - Optional flag "-n" disables assignment to $N
        - Different prompt "Expr>"

- More built-in field types:
    - BigInteger, BigDecimal
    - SimpleDateFormat
    - BitSet
    - InetAddress, Inet4Address, Inet6Address
    - {Gregorian}Calendar?
    - {Simple}TimeZone?

- Graceful recovery mode
    - If any inconsistent information encountered
        - Log an error
        - Return reasonable default

- Add support for XA transactions
    - But only if KVStore supports them

- Reimplement LockManager
    - Using KeyRanges?
    - Using Guava ranges?
        - https://code.google.com/p/guava-libraries/wiki/RangesExplained

